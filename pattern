# pattern
def pattern(n):
    for i in range(0, n):
        for j in range(0, i+1):
            print("* ",end=" ")
            
        print("\r")
n = 5
pattern(n)

# multiplication table
k = int(input("enter k"))
for i in range(1, 11):
    print(k, 'x', i, '=',k * i)
    
# roots of equation
import cmath
a = int(input("enter a"))
b = int(input("enter b"))
c = int(input("enter c"))
d = (b**2) - (4*a*c)
r1 = (-b-cmath.sqrt(d))/(2*a)
r2= (-b-cmath.sqrt(d))/(2*a)
print('solution are {0} and {1}'.format(r1,r2))

# decimal to binary 
def dtb(n): 
    if n > 1:
        dtb(n // 2)
    print(n % 2, end='')
n = int(input("enter n"))
dtb(n)

# fibonacci series
n = int(input("enter n"))
a = 0;
b = 1;
count = 0
print("Fibonacci series:")
while count < n:
    print(a)
    nth = a + b
    a = b
    b = nth
    count += 1
